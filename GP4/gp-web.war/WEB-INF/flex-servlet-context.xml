<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:flex="http://www.springframework.org/schema/flex"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/flex
                           http://www.springframework.org/schema/flex/spring-flex-1.0.xsd">

<!--
    <context:component-scan base-package="com.egatesolutions.gp.business.partscatalogue.service.impl" />
	<bean id="configProcessor" class="com.egatesolutions.gp.core.util.DestinationConfigProcessor" />
-->

	<flex:remoting-destination ref="partsCatalogueService"/>

	<flex:remoting-destination ref="designerService"/>

	<flex:remoting-destination ref="searchService"/>

	<flex:remoting-destination ref="gridService"/>

	<flex:remoting-destination ref="authenticationService"/>

	<flex:remoting-destination ref="globalDataService"/>

	<flex:remoting-destination ref="treeService"/>

	<flex:remoting-destination ref="referenceDataService"/>

	<flex:remoting-destination ref="autoSuggestService"/>

	<flex:remoting-destination ref="notesLibraryService"/>

	<flex:remoting-destination ref="containerService"/>

	<flex:remoting-destination ref="flightScheduleService"/>

	<flex:remoting-destination ref="imageLibraryService"/>

	<flex:remoting-destination ref="productService"/>

	<flex:remoting-destination ref="moduleService"/>

	<flex:remoting-destination ref="publisherReferenceDataService" />

	<flex:remoting-destination ref="cateringStationService"/>

	<flex:remoting-destination ref="stowageBayService"/>

	<flex:remoting-destination ref="flightScheduleProductService"/>

	<flex:remoting-destination ref="moreInfoService"/>

	<flex:remoting-destination ref="taskManagerService"/>

	<flex:remoting-destination ref="serviceCategoryService"/>

	<flex:remoting-destination ref="serviceCodeService"/>

	<flex:remoting-destination ref="conceptTypeService"/>

	<flex:remoting-destination ref="conceptService"/>

	<flex:remoting-destination ref="moduleStowageService"/>

	<flex:remoting-destination ref="preferenceService"/>

	<flex:remoting-destination ref="serviceTypeService"/>

	<flex:remoting-destination ref="fuelBurnService"/>

	<flex:remoting-destination ref="moduleContentService"/>

	<flex:remoting-destination ref="reportRunManager"/>

	<flex:remoting-destination ref="scratchPadService"/>

	<flex:remoting-destination ref="workflowService"/>

	<flex:remoting-destination ref="catererPortalService"/>

	<flex:remoting-destination ref="reportsManager"/>

    <flex:remoting-destination ref="manageSDLRuleService"/>

    <flex:remoting-destination ref="userService"/>
    <flex:remoting-destination ref="oneToOneInventoryService"/>

 	<flex:remoting-destination ref="containerSearchService"/>

    <flex:remoting-destination ref="dssService"/>
    
    <flex:remoting-destination ref="securityService"/>
    
    <flex:remoting-destination ref="portalService"/>
    
    <flex:remoting-destination ref="toolsService"/>
    
    <flex:remoting-destination ref="simulationService"/>
    
    <flex:remoting-destination ref="eventInfoService"/>

    <flex:message-broker>
    	<flex:mapping pattern="/*/messagebroker/*"/>
    	<flex:mapping pattern="/amf"/>
    	<flex:message-interceptor ref="genericSecurityInterceptor"/>
    	<flex:exception-translator ref="genericExceptionTranslator"/>
    	<flex:remoting-service default-adapter-id="java-object" />
    	<flex:secured authentication-manager="authenticationManager" access-decision-manager="accessDecisionManager">
    		<flex:secured-endpoint-path access="ROLE_USER" />
    		<flex:secured-endpoint-path access="ROLE_USER" pattern="/*/messagebroker/*"/>
    		<flex:secured-endpoint-path access="ROLE_USER" pattern="/amf"/>
    	</flex:secured>
	</flex:message-broker>

	<bean id="genericExceptionTranslator" class="com.egatesolutions.gp.web.flex.exception.GenericExceptionTranslator"/>

	<bean id="authenticationService" class="com.egatesolutions.gp.web.security.AuthenticationHelper" autowire="byName"/>

	<bean id="java-object" class="org.springframework.flex.core.ManageableComponentFactoryBean">
	<constructor-arg value="com.egatesolutions.gp.web.flex.adapter.JavaAdapter"/>
	    <property name="properties">
	        <value>
	            {"hibernate" :
	                {"sessionFactory" :
	                    { "class" : "com.egatesolutions.gp.web.flex.hibernate.SessionFactoryUtil",
	                      "getCurrentSessionMethod" : "getCurrentSession"
	                    }
	                }
	            }
	        </value>
	    </property>
	</bean>
	
    <bean id="reportEntityManager" class="com.egatesolutions.gp.web.reports.ReportEntityManager" autowire="byName"/>
	
	<bean id="genericSecurityInterceptor" class="com.egatesolutions.gp.core.security.flex.GenericSecurityInterceptor" autowire="byName"/>
	<bean id="reportsManager" class="com.egatesolutions.gp.web.reports.ReportsManager"	autowire="byName"></bean>

</beans>